@page "/ManageCarouselItems/Create"
@using Blazor.Presentation.Client.Services
@using Blazor.Shared.Entities.DataTransferObjects
@using Blazor.Shared.Entities.Identity
@using Polly
@inject CarouselItemService CarouselItemService
@inject ImageService ImageService
@inject NavigationManager NavigationManager
@attribute [Authorize(Policy = Policies.FromFrance)]

<h1>Editor</h1>
<h2>Carousel Item</h2>
<div class="row">
    <div class="col-2">
        <figure class="img-container">
            @if (!String.IsNullOrEmpty(_imageSource))
            {
                <img src="@_imageSource" alt="@_carouselItem.Alt" style="height: calc(15vw / 1.78 - 1px);"/>
            }
            else
            {
                <img src="images/image-placeholder.jpg" alt="@_carouselItem.Caption" style="width: 100%; height: 100%"/>
            }
            @*<figcaption class="img-caption">@_carouselItem.Caption</figcaption>*@
        </figure>
    </div>
    <div class="col-8">
        <EditForm Model="_carouselItem" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            <div class="input-group mb-3">
                <span class="input-group-text" id="carousel-item-alt-input" style="width: 300px">Image Alternative Name</span>
                <input type="text" @bind="_carouselItem.Alt" class="form-control" placeholder="Image Alternative Name" aria-label="Image Alternative Name" aria-describedby="carousel-item-alt-input">
            </div>

            <div class="input-group mb-3">
                <span class="input-group-text" id="carousel-item-caption-input" style="width: 300px">Image Caption Text</span>
                <textarea type="text" @bind="_carouselItem.Caption" class="form-control" placeholder="Image Caption Text" aria-label="Image Caption Text" aria-describedby="carousel-item-caption-input"></textarea>
            </div>

            <div class="input-group mb-3">
                <label for="image-file-input" class="form-label"></label>
                @if (_carouselItemDto is null)
                {
                    <InputFile class="form-control" id="image-file-input" type="file" OnChange="@OnInputFileChange" disabled="true"/>
                }
                else
                {
                    <InputFile class="form-control" id="image-file-input" type="file" OnChange="@OnInputFileChange"/>
                }
            </div>

            <button class="btn btn-dark btn-sm w-100" type="submit">Submit Changes</button>
        </EditForm>
    </div>
</div>

@code {
    private readonly CarouselItemForCreationDto _carouselItem = new();
    private CarouselItemDto _carouselItemDto;
    private string _imageSource;
    
    private async Task<string> DownloadImageAsync(int carouselItemId)
    {
        var policyResponse = await ImageService.GetImageAsync(carouselItemId);
        if (policyResponse.Outcome != OutcomeType.Successful ||
            policyResponse.Result is null) return "images/image-placeholder.jpg";
                
        var image = policyResponse.Result;

        return String.IsNullOrEmpty(image.Src) 
            ? "images/image-placeholder.jpg" 
            : image.Src;
    }

    private async Task OnValidSubmit(EditContext arg) => _carouselItemDto = await CarouselItemService.CreateAsync(_carouselItem);

    private async Task OnInputFileChange(InputFileChangeEventArgs arg)
    {
        if (_carouselItemDto is not null)
        {
            var browserFile = arg.File;
            _imageSource = await ImageService.UploadImageAsync(_carouselItemDto.Id, browserFile);
        }
    }
}