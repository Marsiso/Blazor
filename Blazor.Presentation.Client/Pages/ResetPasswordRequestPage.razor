@page "/account/password/reset/request"
@using Microsoft.AspNetCore.Components
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@using Blazor.Shared.Entities.DataTransferObjects
@using Blazor.Presentation.Client.Services



@if (_email is null)
{
    <p><strong>Page is loading ...</strong></p>
}
else
{
    <div class="row">
        <div class="col-md-1 col-lg-2 col-xl-3"></div>
        <div class="col-12 col-md-10 col-lg-8 col-xl-6 text-center">
            <h1>Signin New User</h1>
            <h2>Registration Form</h2>
            <EditForm Model="_email" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                
                <SfTextBox @ref="@_textBoxEmailObj" @bind-Value="_email.Email" Placeholder='Email' FloatLabelType='@FloatLabelType.Auto' ShowClearButton=true></SfTextBox>
                <p><ValidationMessage For="@(() => _email.Email)"></ValidationMessage></p>

                <SfButton @ref="@_toggleSigninBtnObj" type="submit" IconCss="@_submitBtnIconCss" CssClass="@_submitBtnCssClass" Content="@_submitBtnContent" Disabled="_isBlocked"></SfButton>
            </EditForm>
        </div>
        <div class="col-md-1 col-lg-2 col-xl-3"></div>
    </div>
}

@code 
{
    private SfTextBox _textBoxEmailObj;
    private SfButton _toggleSigninBtnObj;
    private readonly UserEmailDto _email = new();
    private bool _isBlocked;
    private readonly string _submitBtnIconCss = "e-icons e-bullet-6";
    private readonly string _submitBtnContent = "Signin";
    private readonly string _submitBtnCssClass = "e-flat mt-4 w-100";
    
    [Inject]
    public AccountService AccountService { get; set; }
    
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    
    private async Task OnValidSubmit(EditContext arg)
    {
        _isBlocked = true;
        if (await AccountService.TrySendResetPasswordLinkAsync(_email))
        {
            NavigationManager.NavigateTo("#");
            return;
        }

        _isBlocked = false;
    }
}